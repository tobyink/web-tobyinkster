<code><span style="color: #000000">
<span style="color: #0000BB">&lt;?php<br /><br /></span><span style="color: #FF8000">/**<br /> * PHP Trivial Encryption Classes<br /> * Copyright (C) 2007 Toby Inkster<br /> *<br /> * This program is free software; you can redistribute it and/or modify<br /> * it under the terms of the GNU General Public License as published by<br /> * the Free Software Foundation; either version 3 of the License, or<br /> * (at your option) any later version.<br /> *<br /> * This program is distributed in the hope that it will be useful, but<br /> * WITHOUT ANY WARRANTY; without even the implied warranty of<br /> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU<br /> * General Public License for more details.<br /> *<br /> * You should have received a copy of the GNU General Public License<br /> * along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br /> *<br /> * @author Toby Inkster<br /> * @copyright Copyright (C) 2007 Toby Inkster<br /> * @package TrivialEncoder<br /> * @version 0.2<br /> * @link http://tobyinkster.co.uk/tag/trivial-encoder/<br /> * @license http://www.gnu.org/licenses/gpl-3.0.html GNU General Public Licence<br /> */<br /><br />/* Disable notices because they cause problems when MCrypt is not available. */<br />// error_reporting(E_ALL ^ E_NOTICE);<br /><br /></span><span style="color: #007700">class </span><span style="color: #0000BB">TE_Init_Exception </span><span style="color: #007700">extends </span><span style="color: #0000BB">Exception </span><span style="color: #007700">{ }<br />class </span><span style="color: #0000BB">TE_Crypto_Exception </span><span style="color: #007700">extends </span><span style="color: #0000BB">Exception </span><span style="color: #007700">{ }<br />class </span><span style="color: #0000BB">TE_Manager_Exception </span><span style="color: #007700">extends </span><span style="color: #0000BB">Exception </span><span style="color: #007700">{ }<br /><br /></span><span style="color: #0000BB">define</span><span style="color: #007700">(</span><span style="color: #DD0000">'ASCII_SAFE_NEVER'</span><span style="color: #007700">, </span><span style="color: #0000BB">0</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">define</span><span style="color: #007700">(</span><span style="color: #DD0000">'ASCII_SAFE_PASSTHRU'</span><span style="color: #007700">, </span><span style="color: #0000BB">0.5</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">define</span><span style="color: #007700">(</span><span style="color: #DD0000">'ASCII_SAFE_ALWAYS'</span><span style="color: #007700">, </span><span style="color: #0000BB">1</span><span style="color: #007700">);<br /><br /></span><span style="color: #0000BB">define</span><span style="color: #007700">(</span><span style="color: #DD0000">'PARAMS_NONE'</span><span style="color: #007700">, </span><span style="color: #0000BB">0</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">define</span><span style="color: #007700">(</span><span style="color: #DD0000">'PARAMS_NUMBER'</span><span style="color: #007700">, </span><span style="color: #0000BB">1</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">define</span><span style="color: #007700">(</span><span style="color: #DD0000">'PARAMS_KEYWORD'</span><span style="color: #007700">, </span><span style="color: #0000BB">2</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">define</span><span style="color: #007700">(</span><span style="color: #DD0000">'PARAMS_UCASE'</span><span style="color: #007700">, </span><span style="color: #0000BB">4</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">define</span><span style="color: #007700">(</span><span style="color: #DD0000">'PARAMS_MISC'</span><span style="color: #007700">, </span><span style="color: #0000BB">1024</span><span style="color: #007700">);<br /><br /></span><span style="color: #0000BB">define</span><span style="color: #007700">(</span><span style="color: #DD0000">'STRENGTH_TRIVIAL'</span><span style="color: #007700">,&nbsp;&nbsp;</span><span style="color: #0000BB">1.1</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">define</span><span style="color: #007700">(</span><span style="color: #DD0000">'STRENGTH_WEAK'</span><span style="color: #007700">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">1.5</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">define</span><span style="color: #007700">(</span><span style="color: #DD0000">'STRENGTH_MEDIUM'</span><span style="color: #007700">,&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">2.0</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">define</span><span style="color: #007700">(</span><span style="color: #DD0000">'STRENGTH_STRONG'</span><span style="color: #007700">,&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">4.0</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">define</span><span style="color: #007700">(</span><span style="color: #DD0000">'STRENGTH_UNKNOWN'</span><span style="color: #007700">,&nbsp;&nbsp;</span><span style="color: #0000BB">0.0</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">/**<br /> * Deprecated Trivial Encoder Manager.<br /> *<br /> * Use TE_Machine instead.<br /> */<br /></span><span style="color: #007700">class </span><span style="color: #0000BB">TrivialEncoderManager<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;private </span><span style="color: #0000BB">$encoders </span><span style="color: #007700">= array();<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">__construct </span><span style="color: #007700">()<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$classes </span><span style="color: #007700">= </span><span style="color: #0000BB">get_declared_classes</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach (</span><span style="color: #0000BB">$classes </span><span style="color: #007700">as </span><span style="color: #0000BB">$c</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</span><span style="color: #0000BB">is_subclass_of</span><span style="color: #007700">(</span><span style="color: #0000BB">$c</span><span style="color: #007700">, </span><span style="color: #DD0000">'TrivialEncoder'</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">encoders</span><span style="color: #007700">[ eval(</span><span style="color: #DD0000">"return $c::CODE;"</span><span style="color: #007700">) ] = </span><span style="color: #0000BB">$c</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach (</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">encoders </span><span style="color: #007700">as </span><span style="color: #0000BB">$k</span><span style="color: #007700">=&gt;</span><span style="color: #0000BB">$v</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$k</span><span style="color: #007700">,</span><span style="color: #0000BB">0</span><span style="color: #007700">,</span><span style="color: #0000BB">1</span><span style="color: #007700">)==</span><span style="color: #DD0000">'!'</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unset(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">encoders</span><span style="color: #007700">[</span><span style="color: #0000BB">$k</span><span style="color: #007700">]);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">ksort</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">encoders</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">encode </span><span style="color: #007700">(</span><span style="color: #0000BB">$method</span><span style="color: #007700">, </span><span style="color: #0000BB">$text</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$steps </span><span style="color: #007700">= </span><span style="color: #0000BB">explode</span><span style="color: #007700">(</span><span style="color: #DD0000">';'</span><span style="color: #007700">, </span><span style="color: #0000BB">$method</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach (</span><span style="color: #0000BB">$steps </span><span style="color: #007700">as </span><span style="color: #0000BB">$s</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$options </span><span style="color: #007700">= </span><span style="color: #0000BB">explode</span><span style="color: #007700">(</span><span style="color: #DD0000">' '</span><span style="color: #007700">, </span><span style="color: #0000BB">$s</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$code&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">strtolower</span><span style="color: #007700">(</span><span style="color: #0000BB">trim</span><span style="color: #007700">(</span><span style="color: #0000BB">array_shift</span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">)));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$class </span><span style="color: #007700">= </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">encoders</span><span style="color: #007700">[</span><span style="color: #0000BB">$code</span><span style="color: #007700">];<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$class</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new </span><span style="color: #0000BB">TE_Manager_Exception</span><span style="color: #007700">(</span><span style="color: #DD0000">"Encoder '$code' not found."</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$encoder </span><span style="color: #007700">= new </span><span style="color: #0000BB">$class</span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$text </span><span style="color: #007700">= </span><span style="color: #0000BB">$encoder</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">encode</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$text</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">decode </span><span style="color: #007700">(</span><span style="color: #0000BB">$method</span><span style="color: #007700">, </span><span style="color: #0000BB">$text</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$steps </span><span style="color: #007700">= </span><span style="color: #0000BB">array_reverse</span><span style="color: #007700">(</span><span style="color: #0000BB">explode</span><span style="color: #007700">(</span><span style="color: #DD0000">';'</span><span style="color: #007700">, </span><span style="color: #0000BB">$method</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach (</span><span style="color: #0000BB">$steps </span><span style="color: #007700">as </span><span style="color: #0000BB">$s</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$options </span><span style="color: #007700">= </span><span style="color: #0000BB">explode</span><span style="color: #007700">(</span><span style="color: #DD0000">' '</span><span style="color: #007700">, </span><span style="color: #0000BB">$s</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$code&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">strtolower</span><span style="color: #007700">(</span><span style="color: #0000BB">trim</span><span style="color: #007700">(</span><span style="color: #0000BB">array_shift</span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">)));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$class </span><span style="color: #007700">= </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">encoders</span><span style="color: #007700">[</span><span style="color: #0000BB">$code</span><span style="color: #007700">];<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$class</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new </span><span style="color: #0000BB">TE_Manager_Exception</span><span style="color: #007700">(</span><span style="color: #DD0000">"Encoder '$code' not found."</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$encoder </span><span style="color: #007700">= new </span><span style="color: #0000BB">$class</span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$text </span><span style="color: #007700">= </span><span style="color: #0000BB">$encoder</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">decode</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$text</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />abstract class </span><span style="color: #0000BB">TrivialEncoder<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Abstract'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'!'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">LINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'http://tobyinkster.co.uk/blog/'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">ASCII_SAFENESS </span><span style="color: #007700">= </span><span style="color: #0000BB">ASCII_SAFE_NEVER</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">REQUIRE_MCRYPT </span><span style="color: #007700">= </span><span style="color: #0000BB">FALSE</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">PARAMS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">PARAMS_NONE</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">STRENGTH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">STRENGTH_UNKNOWN</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;abstract public function </span><span style="color: #0000BB">__construct </span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;abstract public function </span><span style="color: #0000BB">encode </span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;abstract public function </span><span style="color: #0000BB">decode </span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">explain </span><span style="color: #007700">() { return </span><span style="color: #DD0000">"No description is available."</span><span style="color: #007700">; }<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_Rot </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Alphabetic Rotation'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'rot'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">LINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'http://en.wikipedia.org/wiki/Caesar_cipher'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">ASCII_SAFENESS </span><span style="color: #007700">= </span><span style="color: #0000BB">ASCII_SAFE_PASSTHRU</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">PARAMS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">PARAMS_NUMBER</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">STRENGTH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">STRENGTH_TRIVIAL</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$n </span><span style="color: #007700">= </span><span style="color: #0000BB">0</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected static </span><span style="color: #0000BB">$alphabet </span><span style="color: #007700">= </span><span style="color: #DD0000">'abcdefghijklmnopqrstuvwxyz'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">__construct </span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</span><span style="color: #0000BB">$options</span><span style="color: #007700">[</span><span style="color: #0000BB">0</span><span style="color: #007700">]))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">n </span><span style="color: #007700">= (int)</span><span style="color: #0000BB">$options</span><span style="color: #007700">[</span><span style="color: #0000BB">0</span><span style="color: #007700">] % </span><span style="color: #0000BB">26</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">encode </span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$rotAlpha </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">self</span><span style="color: #007700">::</span><span style="color: #0000BB">$alphabet</span><span style="color: #007700">, </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">n</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;. </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">self</span><span style="color: #007700">::</span><span style="color: #0000BB">$alphabet</span><span style="color: #007700">, </span><span style="color: #0000BB">0</span><span style="color: #007700">, </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">n</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$from </span><span style="color: #007700">= </span><span style="color: #0000BB">self</span><span style="color: #007700">::</span><span style="color: #0000BB">$alphabet</span><span style="color: #007700">.</span><span style="color: #0000BB">strtoupper</span><span style="color: #007700">(</span><span style="color: #0000BB">self</span><span style="color: #007700">::</span><span style="color: #0000BB">$alphabet</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$to&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">$rotAlpha</span><span style="color: #007700">.</span><span style="color: #0000BB">strtoupper</span><span style="color: #007700">(</span><span style="color: #0000BB">$rotAlpha</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$code </span><span style="color: #007700">= </span><span style="color: #0000BB">strtr</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">, </span><span style="color: #0000BB">$from</span><span style="color: #007700">, </span><span style="color: #0000BB">$to</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$code</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">decode </span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">n </span><span style="color: #007700">= (</span><span style="color: #0000BB">26 </span><span style="color: #007700">- </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">n</span><span style="color: #007700">) % </span><span style="color: #0000BB">26</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$text </span><span style="color: #007700">= </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">encode</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">n </span><span style="color: #007700">= (</span><span style="color: #0000BB">26 </span><span style="color: #007700">- </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">n</span><span style="color: #007700">) % </span><span style="color: #0000BB">26</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$text</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">explain </span><span style="color: #007700">()<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">wordwrap</span><span style="color: #007700">(</span><span style="color: #DD0000">"'rot' is a group of substitution cyphers in which each letter in the plaintext is replaced by a letter some fixed number of positions further down the alphabet. For example, with a shift of 3, 'A' would be replaced by 'D', 'B' would become 'E', and so on.\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"Note that this only changes letters in the message.\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"Examples:\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"'rot 5'\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"Will rotate each letter five places.\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"'rot 25'\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"'rot -1'\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"These are exactly equivalent."<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_Rot13 </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_Rot<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'ROT-13'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'rot13'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">LINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'http://en.wikipedia.org/wiki/Rot-13'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">PARAMS&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">PARAMS_NONE</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">STRENGTH </span><span style="color: #007700">= </span><span style="color: #0000BB">STRENGTH_TRIVIAL</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$n </span><span style="color: #007700">= </span><span style="color: #0000BB">13</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">__construct </span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">) { </span><span style="color: #FF8000">/* no options */ </span><span style="color: #007700">}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">explain </span><span style="color: #007700">()<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">parent</span><span style="color: #007700">::</span><span style="color: #0000BB">explain</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n\n"</span><span style="color: #007700">.</span><span style="color: #0000BB">wordwrap</span><span style="color: #007700">(</span><span style="color: #DD0000">"'rot13' shifts the alphabet by 13 places, half the length of the alphabet, thus being its own inverse."</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_Caesar </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_Rot<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Caesar\'s Cypher'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'caesar'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">LINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'http://en.wikipedia.org/wiki/Caesar_cipher'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">PARAMS&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">PARAMS_NONE</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">STRENGTH </span><span style="color: #007700">= </span><span style="color: #0000BB">STRENGTH_TRIVIAL</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$n </span><span style="color: #007700">= </span><span style="color: #0000BB">3</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">__construct </span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">) { </span><span style="color: #FF8000">/* no options */ </span><span style="color: #007700">}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">explain </span><span style="color: #007700">()<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">parent</span><span style="color: #007700">::</span><span style="color: #0000BB">explain</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n\n"</span><span style="color: #007700">.</span><span style="color: #0000BB">wordwrap</span><span style="color: #007700">(</span><span style="color: #DD0000">"'caesar' is the cypher used by Julius Caesar to communicate with his generals. It uses a shift of three places."</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_Rot47 </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'ROT-47'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'rot47'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">LINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'http://en.wikipedia.org/wiki/Rot-13#Variants'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">ASCII_SAFENESS </span><span style="color: #007700">= </span><span style="color: #0000BB">ASCII_SAFE_PASSTHRU</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">PARAMS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">PARAMS_NUMBER</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">STRENGTH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">STRENGTH_TRIVIAL</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$n </span><span style="color: #007700">= </span><span style="color: #0000BB">47</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected static </span><span style="color: #0000BB">$alphabet </span><span style="color: #007700">= </span><span style="color: #DD0000">'!"#$%&amp;\'()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">__construct </span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</span><span style="color: #0000BB">$options</span><span style="color: #007700">[</span><span style="color: #0000BB">0</span><span style="color: #007700">]))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">n </span><span style="color: #007700">= (int)</span><span style="color: #0000BB">$options</span><span style="color: #007700">[</span><span style="color: #0000BB">0</span><span style="color: #007700">] % </span><span style="color: #0000BB">94</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">encode </span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$rotAlpha </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">self</span><span style="color: #007700">::</span><span style="color: #0000BB">$alphabet</span><span style="color: #007700">, </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">n</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;. </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">self</span><span style="color: #007700">::</span><span style="color: #0000BB">$alphabet</span><span style="color: #007700">, </span><span style="color: #0000BB">0</span><span style="color: #007700">, </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">n</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$code </span><span style="color: #007700">= </span><span style="color: #0000BB">strtr</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">, </span><span style="color: #0000BB">self</span><span style="color: #007700">::</span><span style="color: #0000BB">$alphabet</span><span style="color: #007700">, </span><span style="color: #0000BB">$rotAlpha</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$code</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">decode </span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">n </span><span style="color: #007700">= (</span><span style="color: #0000BB">94 </span><span style="color: #007700">- </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">n</span><span style="color: #007700">) % </span><span style="color: #0000BB">94</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$text </span><span style="color: #007700">= </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">encode</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">n </span><span style="color: #007700">= (</span><span style="color: #0000BB">94 </span><span style="color: #007700">- </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">n</span><span style="color: #007700">) % </span><span style="color: #0000BB">94</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$text</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">explain </span><span style="color: #007700">()<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">wordwrap</span><span style="color: #007700">(</span><span style="color: #DD0000">"This is a family of cyphers that operate similarly to the alphabetic rotation cyphers. However, instead of just operating on the alphabet, they operate on the 94 most common printable ASCII characters. This provides a slightly stronger encryption, especially for text that includes significant numeric information.\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"Although the default is to rotate text 47 characters (half of 94, and thus its own inverse), you may pass a numeric parameter to this function to rotate it a different number of places."<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_XOR </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Simple XOR Encryption'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'xor'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">PARAMS&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">PARAMS_NUMBER</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">STRENGTH </span><span style="color: #007700">= </span><span style="color: #0000BB">STRENGTH_WEAK</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$n </span><span style="color: #007700">= </span><span style="color: #0000BB">255</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">__construct </span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</span><span style="color: #0000BB">$options</span><span style="color: #007700">[</span><span style="color: #0000BB">0</span><span style="color: #007700">]))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">n </span><span style="color: #007700">= (int)</span><span style="color: #0000BB">$options</span><span style="color: #007700">[</span><span style="color: #0000BB">0</span><span style="color: #007700">] % </span><span style="color: #0000BB">256</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">encode </span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$code </span><span style="color: #007700">= </span><span style="color: #DD0000">''</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$char </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">, </span><span style="color: #0000BB">0</span><span style="color: #007700">, </span><span style="color: #0000BB">1</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$text </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">, </span><span style="color: #0000BB">1</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$code </span><span style="color: #007700">.= </span><span style="color: #0000BB">chr</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">n </span><span style="color: #007700">^ </span><span style="color: #0000BB">ord</span><span style="color: #007700">(</span><span style="color: #0000BB">$char</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$code</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">decode </span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">encode</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">explain </span><span style="color: #007700">()<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">wordwrap</span><span style="color: #007700">(</span><span style="color: #DD0000">"'xor N' performs a bitwise XOR operation with a given number N on each character of the message. Although this is a pretty simple encoding scheme, it's a little better than the 'rot' family of encodings, and works well on binary data. Default N is 255.\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"Examples:\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"'xor 13'\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"Will XOR each byte with the binary 00001101. Will encode 'ABCDE' to 'LONIH'.\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"'xor 0'\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"Does nothing."<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"'xor 19; xor 19'\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"XOR encodings are their own inverse, so this does nothing too."<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_Memfrob </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_XOR<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Memfrob Frobnication'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'memfrob'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">LINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'http://www.gnu.org/software/libc/manual/html_node/Trivial-Encryption.html'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">PARAMS&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">PARAMS_NONE</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">STRENGTH </span><span style="color: #007700">= </span><span style="color: #0000BB">STRENGTH_TRIVIAL</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$n </span><span style="color: #007700">= </span><span style="color: #0000BB">42</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">__construct </span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">) { </span><span style="color: #FF8000">/* no options */ </span><span style="color: #007700">}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">explain </span><span style="color: #007700">()<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">parent</span><span style="color: #007700">::</span><span style="color: #0000BB">explain</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n\n"</span><span style="color: #007700">.</span><span style="color: #0000BB">wordwrap</span><span style="color: #007700">(</span><span style="color: #DD0000">"'memfrob' is the equivalent of 'xor 42'. (According to Douglas Adams, 42 is the answer to life, the universe and everything.)"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_Keyword </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Keyword Cypher'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'key'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">LINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'http://en.wikipedia.org/wiki/Keyword_cipher'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">ASCII_SAFENESS </span><span style="color: #007700">= </span><span style="color: #0000BB">ASCII_SAFE_PASSTHRU</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">PARAMS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">PARAMS_KEYWORD</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">STRENGTH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">STRENGTH_WEAK</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$key </span><span style="color: #007700">= </span><span style="color: #DD0000">'kryptos'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected static </span><span style="color: #0000BB">$alphabet </span><span style="color: #007700">= </span><span style="color: #DD0000">'abcdefghijklmnopqrstuvwxyz'</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">__construct </span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</span><span style="color: #0000BB">$options</span><span style="color: #007700">[</span><span style="color: #0000BB">0</span><span style="color: #007700">]))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$gotit </span><span style="color: #007700">= array();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$key </span><span style="color: #007700">= </span><span style="color: #0000BB">strtolower</span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">[</span><span style="color: #0000BB">0</span><span style="color: #007700">]);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$key </span><span style="color: #007700">= </span><span style="color: #0000BB">preg_replace</span><span style="color: #007700">(</span><span style="color: #DD0000">'/[^a-z]/'</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #0000BB">$key</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$key</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">key </span><span style="color: #007700">= </span><span style="color: #DD0000">''</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$key</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$char </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$key</span><span style="color: #007700">, </span><span style="color: #0000BB">0</span><span style="color: #007700">, </span><span style="color: #0000BB">1</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$key&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$key</span><span style="color: #007700">, </span><span style="color: #0000BB">1</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</span><span style="color: #0000BB">$gotit</span><span style="color: #007700">[</span><span style="color: #0000BB">$char</span><span style="color: #007700">]))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$gotit</span><span style="color: #007700">[</span><span style="color: #0000BB">$char</span><span style="color: #007700">] = </span><span style="color: #0000BB">1</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">key </span><span style="color: #007700">.= </span><span style="color: #0000BB">$char</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">encode </span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$to&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">make_keystring</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$from </span><span style="color: #007700">= </span><span style="color: #0000BB">self</span><span style="color: #007700">::</span><span style="color: #0000BB">$alphabet</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$to&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">$to&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">. </span><span style="color: #0000BB">strtoupper</span><span style="color: #007700">(</span><span style="color: #0000BB">$to</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$from </span><span style="color: #007700">= </span><span style="color: #0000BB">$from </span><span style="color: #007700">. </span><span style="color: #0000BB">strtoupper</span><span style="color: #007700">(</span><span style="color: #0000BB">$from</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">strtr</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">, </span><span style="color: #0000BB">$from</span><span style="color: #007700">, </span><span style="color: #0000BB">$to</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">decode </span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$to&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">make_keystring</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$from </span><span style="color: #007700">= </span><span style="color: #0000BB">self</span><span style="color: #007700">::</span><span style="color: #0000BB">$alphabet</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$to&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">$to&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">. </span><span style="color: #0000BB">strtoupper</span><span style="color: #007700">(</span><span style="color: #0000BB">$to</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$from </span><span style="color: #007700">= </span><span style="color: #0000BB">$from </span><span style="color: #007700">. </span><span style="color: #0000BB">strtoupper</span><span style="color: #007700">(</span><span style="color: #0000BB">$from</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">strtr</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">, </span><span style="color: #0000BB">$to</span><span style="color: #007700">,&nbsp;&nbsp;</span><span style="color: #0000BB">$from</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected function </span><span style="color: #0000BB">make_keystring </span><span style="color: #007700">()<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">key</span><span style="color: #007700">.</span><span style="color: #0000BB">preg_replace</span><span style="color: #007700">(</span><span style="color: #DD0000">'/['</span><span style="color: #007700">.</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">key</span><span style="color: #007700">.</span><span style="color: #DD0000">']/i'</span><span style="color: #007700">,</span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #0000BB">self</span><span style="color: #007700">::</span><span style="color: #0000BB">$alphabet</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_OneTimePad_Xor </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'One Time Pad (Xor)'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'otpx'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">LINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'http://en.wikipedia.org/wiki/One-time_pad'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">STRENGTH </span><span style="color: #007700">= </span><span style="color: #0000BB">STRENGTH_WEAK</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">__construct </span><span style="color: #007700">() { </span><span style="color: #FF8000">/* NOOP */ </span><span style="color: #007700">}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">encode </span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$sheet </span><span style="color: #007700">= </span><span style="color: #0000BB">self</span><span style="color: #007700">::</span><span style="color: #0000BB">get_sheet</span><span style="color: #007700">(</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$sheet </span><span style="color: #007700">. </span><span style="color: #0000BB">self</span><span style="color: #007700">::</span><span style="color: #0000BB">use_sheet</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">, </span><span style="color: #0000BB">$sheet</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">decode </span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">)%</span><span style="color: #0000BB">2 </span><span style="color: #007700">!= </span><span style="color: #0000BB">0</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new </span><span style="color: #0000BB">TE_Crypto_Exception</span><span style="color: #007700">(</span><span style="color: #DD0000">"Input not valid. Wrong length: "</span><span style="color: #007700">.</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">).</span><span style="color: #DD0000">"."</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$sheet </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">, </span><span style="color: #0000BB">0</span><span style="color: #007700">, </span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">)/</span><span style="color: #0000BB">2</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$code&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">, </span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">)/</span><span style="color: #0000BB">2</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">self</span><span style="color: #007700">::</span><span style="color: #0000BB">use_sheet</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">, </span><span style="color: #0000BB">$sheet</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">explain </span><span style="color: #007700">()<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">wordwrap</span><span style="color: #007700">(</span><span style="color: #DD0000">"The one time pad is a very old, but incredibly effective form of encryption. The only problem is that it's symmetric, with a very big key. To implement it in a library such as this, the key needs to be included as part of the result, which makes this algorithm as secure as a locked door where they key has been left in the lock.\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"This algorithm combines the plaintext with the pad sheet using the XOR operation. See also 'otp'.\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"For a one time pad algorithm with very good security, see 'multix'."<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public static function </span><span style="color: #0000BB">get_sheet </span><span style="color: #007700">(</span><span style="color: #0000BB">$len</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$retval </span><span style="color: #007700">= </span><span style="color: #DD0000">''</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for ( </span><span style="color: #0000BB">$i</span><span style="color: #007700">=</span><span style="color: #0000BB">0 </span><span style="color: #007700">; </span><span style="color: #0000BB">$i</span><span style="color: #007700">&lt;</span><span style="color: #0000BB">$len </span><span style="color: #007700">; </span><span style="color: #0000BB">$i</span><span style="color: #007700">++ )<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$retval </span><span style="color: #007700">.= </span><span style="color: #0000BB">chr</span><span style="color: #007700">(</span><span style="color: #0000BB">rand</span><span style="color: #007700">(</span><span style="color: #0000BB">0</span><span style="color: #007700">,</span><span style="color: #0000BB">255</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$retval</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public static function </span><span style="color: #0000BB">use_sheet </span><span style="color: #007700">(</span><span style="color: #0000BB">$a</span><span style="color: #007700">, </span><span style="color: #0000BB">$b</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$a</span><span style="color: #007700">)!=</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$b</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new </span><span style="color: #0000BB">TE_Crypto_Exception</span><span style="color: #007700">(</span><span style="color: #DD0000">"Input not valid. Pad sheet and crypted text differ in length."</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$retval </span><span style="color: #007700">= </span><span style="color: #DD0000">''</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$a</span><span style="color: #007700">) &amp;&amp; </span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$b</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$A </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$a</span><span style="color: #007700">, </span><span style="color: #0000BB">0</span><span style="color: #007700">, </span><span style="color: #0000BB">1</span><span style="color: #007700">); </span><span style="color: #0000BB">$a </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$a</span><span style="color: #007700">, </span><span style="color: #0000BB">1</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$B </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$b</span><span style="color: #007700">, </span><span style="color: #0000BB">0</span><span style="color: #007700">, </span><span style="color: #0000BB">1</span><span style="color: #007700">); </span><span style="color: #0000BB">$b </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$b</span><span style="color: #007700">, </span><span style="color: #0000BB">1</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$retval </span><span style="color: #007700">.= </span><span style="color: #0000BB">$A </span><span style="color: #007700">^ </span><span style="color: #0000BB">$B</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$retval</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_OneTimePad_Mod </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_OneTimePad_Xor<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'One Time Pad (Modulo)'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'otp'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">STRENGTH </span><span style="color: #007700">= </span><span style="color: #0000BB">STRENGTH_WEAK</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">encode </span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$sheet </span><span style="color: #007700">= </span><span style="color: #0000BB">self</span><span style="color: #007700">::</span><span style="color: #0000BB">get_sheet</span><span style="color: #007700">(</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$sheet </span><span style="color: #007700">. </span><span style="color: #0000BB">self</span><span style="color: #007700">::</span><span style="color: #0000BB">use_sheet</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">, </span><span style="color: #0000BB">$sheet</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">decode </span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">)%</span><span style="color: #0000BB">2 </span><span style="color: #007700">!= </span><span style="color: #0000BB">0</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new </span><span style="color: #0000BB">TE_Crypto_Exception</span><span style="color: #007700">(</span><span style="color: #DD0000">"Input not valid. Wrong length: "</span><span style="color: #007700">.</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">).</span><span style="color: #DD0000">"."</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$sheet </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">, </span><span style="color: #0000BB">0</span><span style="color: #007700">, </span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">)/</span><span style="color: #0000BB">2</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$code&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">, </span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">)/</span><span style="color: #0000BB">2</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">self</span><span style="color: #007700">::</span><span style="color: #0000BB">use_sheet</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">, </span><span style="color: #0000BB">$sheet</span><span style="color: #007700">, </span><span style="color: #0000BB">TRUE</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">explain </span><span style="color: #007700">()<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">wordwrap</span><span style="color: #007700">(</span><span style="color: #DD0000">"The one time pad is a very old, but incredibly effective form of encryption. The only problem is that it's symmetric, with a very big key. To implement it in a library such as this, the key needs to be included as part of the result, which makes this algorithm as secure as a locked door where they key has been left in the lock.\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"This algorithm combines the plaintext with the pad sheet using modulo 256 addition. See also 'otpx'.\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"For a one time pad algorithm with very good security, see 'multi'."<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public static function </span><span style="color: #0000BB">use_sheet </span><span style="color: #007700">(</span><span style="color: #0000BB">$a</span><span style="color: #007700">, </span><span style="color: #0000BB">$b</span><span style="color: #007700">, </span><span style="color: #0000BB">$subtract</span><span style="color: #007700">=</span><span style="color: #0000BB">FALSE</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$a</span><span style="color: #007700">)!=</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$b</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new </span><span style="color: #0000BB">TE_Crypto_Exception</span><span style="color: #007700">(</span><span style="color: #DD0000">"Input not valid. Pad sheet and crypted text differ in length."</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$retval </span><span style="color: #007700">= </span><span style="color: #DD0000">''</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$a</span><span style="color: #007700">) &amp;&amp; </span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$b</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$A </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$a</span><span style="color: #007700">, </span><span style="color: #0000BB">0</span><span style="color: #007700">, </span><span style="color: #0000BB">1</span><span style="color: #007700">); </span><span style="color: #0000BB">$a </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$a</span><span style="color: #007700">, </span><span style="color: #0000BB">1</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$B </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$b</span><span style="color: #007700">, </span><span style="color: #0000BB">0</span><span style="color: #007700">, </span><span style="color: #0000BB">1</span><span style="color: #007700">); </span><span style="color: #0000BB">$b </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$b</span><span style="color: #007700">, </span><span style="color: #0000BB">1</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</span><span style="color: #0000BB">$subtract</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$retval </span><span style="color: #007700">.= </span><span style="color: #0000BB">chr</span><span style="color: #007700">((</span><span style="color: #0000BB">ord</span><span style="color: #007700">(</span><span style="color: #0000BB">$A</span><span style="color: #007700">) - </span><span style="color: #0000BB">ord</span><span style="color: #007700">(</span><span style="color: #0000BB">$B</span><span style="color: #007700">)) % </span><span style="color: #0000BB">256</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$retval </span><span style="color: #007700">.= </span><span style="color: #0000BB">chr</span><span style="color: #007700">((</span><span style="color: #0000BB">ord</span><span style="color: #007700">(</span><span style="color: #0000BB">$A</span><span style="color: #007700">) + </span><span style="color: #0000BB">ord</span><span style="color: #007700">(</span><span style="color: #0000BB">$B</span><span style="color: #007700">)) % </span><span style="color: #0000BB">256</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$retval</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_Multi_Mod </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Multi-OTP (Modulo)'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'multi'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">LINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'http://en.wikipedia.org/wiki/Superencryption'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">PARAMS&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">PARAMS_MISC</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">STRENGTH </span><span style="color: #007700">= </span><span style="color: #0000BB">STRENGTH_MEDIUM</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$methods </span><span style="color: #007700">= array();<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$otp </span><span style="color: #007700">= </span><span style="color: #DD0000">'TrivialEncoder_OneTimePad_Mod'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">__construct </span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!</span><span style="color: #0000BB">class_exists</span><span style="color: #007700">(</span><span style="color: #DD0000">'TE_Machine'</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new </span><span style="color: #0000BB">TE_Init_Exception</span><span style="color: #007700">(</span><span style="color: #DD0000">"This encoding method can only be used in conjunction with TE_Machine, not TrivialEncoderManager."</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach (</span><span style="color: #0000BB">$options </span><span style="color: #007700">as </span><span style="color: #0000BB">$i</span><span style="color: #007700">=&gt;</span><span style="color: #0000BB">$x</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</span><span style="color: #0000BB">$x </span><span style="color: #007700">instanceof </span><span style="color: #0000BB">TE_Ast_Script</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">methods</span><span style="color: #007700">[] = </span><span style="color: #0000BB">$x</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new </span><span style="color: #0000BB">TE_Init_Exception</span><span style="color: #007700">(</span><span style="color: #DD0000">"Wrong parameter type: parameter $i should be of type TE_Ast_Script."</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">encode </span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$count </span><span style="color: #007700">= </span><span style="color: #0000BB">count</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">methods</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$textlen </span><span style="color: #007700">= </span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$encrypted </span><span style="color: #007700">= </span><span style="color: #0000BB">$text</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$pads </span><span style="color: #007700">= array();<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">/* For each method */<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">for (</span><span style="color: #0000BB">$i</span><span style="color: #007700">=</span><span style="color: #0000BB">0</span><span style="color: #007700">; </span><span style="color: #0000BB">$i</span><span style="color: #007700">&lt;</span><span style="color: #0000BB">$count</span><span style="color: #007700">; </span><span style="color: #0000BB">$i</span><span style="color: #007700">++)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">/* Get a one time pad sheet. */<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$pads</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">]&nbsp;&nbsp;&nbsp;= </span><span style="color: #0000BB">call_user_func</span><span style="color: #007700">(array(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">otp</span><span style="color: #007700">, </span><span style="color: #DD0000">'get_sheet'</span><span style="color: #007700">), </span><span style="color: #0000BB">$textlen</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">/* Encrypt the data using the sheet. */<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$encrypted&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">call_user_func</span><span style="color: #007700">(array(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">otp</span><span style="color: #007700">, </span><span style="color: #DD0000">'use_sheet'</span><span style="color: #007700">), </span><span style="color: #0000BB">$encrypted</span><span style="color: #007700">, </span><span style="color: #0000BB">$pads</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">]);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">/* Encrypt that sheet using the method. */<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$machine </span><span style="color: #007700">= </span><span style="color: #0000BB">TE_Machine_Encoder</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$machine</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">set_buffer</span><span style="color: #007700">(</span><span style="color: #0000BB">$pads</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">]);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">methods</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">]-&gt;</span><span style="color: #0000BB">evaluate</span><span style="color: #007700">(</span><span style="color: #0000BB">$machine</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$cpads</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">]&nbsp;&nbsp;= </span><span style="color: #0000BB">$machine</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">get_buffer</span><span style="color: #007700">();<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">/* Store the length of the sheet. */<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$lcpads</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">] = </span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$cpads</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">]);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">/* Return concatenated data. */<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">return </span><span style="color: #DD0000">'['</span><span style="color: #007700">.</span><span style="color: #0000BB">join</span><span style="color: #007700">(</span><span style="color: #DD0000">' '</span><span style="color: #007700">, </span><span style="color: #0000BB">$lcpads</span><span style="color: #007700">).</span><span style="color: #DD0000">']'</span><span style="color: #007700">.</span><span style="color: #0000BB">join</span><span style="color: #007700">(</span><span style="color: #DD0000">''</span><span style="color: #007700">,</span><span style="color: #0000BB">$cpads</span><span style="color: #007700">).</span><span style="color: #0000BB">$encrypted</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">decode </span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!</span><span style="color: #0000BB">preg_match</span><span style="color: #007700">(</span><span style="color: #DD0000">'/\[([0-9 ]+)\]/'</span><span style="color: #007700">, </span><span style="color: #0000BB">$code</span><span style="color: #007700">, </span><span style="color: #0000BB">$matches</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new </span><span style="color: #0000BB">TE_Crypto_Exception</span><span style="color: #007700">(</span><span style="color: #DD0000">'No part length codes included.'</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$code </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">, </span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$matches</span><span style="color: #007700">[</span><span style="color: #0000BB">0</span><span style="color: #007700">]));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$lcpads </span><span style="color: #007700">= </span><span style="color: #0000BB">explode</span><span style="color: #007700">(</span><span style="color: #DD0000">' '</span><span style="color: #007700">, </span><span style="color: #0000BB">$matches</span><span style="color: #007700">[</span><span style="color: #0000BB">1</span><span style="color: #007700">]);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (</span><span style="color: #0000BB">$i</span><span style="color: #007700">=</span><span style="color: #0000BB">0</span><span style="color: #007700">; isset(</span><span style="color: #0000BB">$lcpads</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">]); </span><span style="color: #0000BB">$i</span><span style="color: #007700">++)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$length&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">$lcpads</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">];<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$cpads</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">] = </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">, </span><span style="color: #0000BB">0</span><span style="color: #007700">, </span><span style="color: #0000BB">$length</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$code&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">, </span><span style="color: #0000BB">$length</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">/* Encrypt the sheet using the method. */<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$machine </span><span style="color: #007700">= new </span><span style="color: #0000BB">TE_Machine_Decoder</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$machine</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">set_buffer</span><span style="color: #007700">(</span><span style="color: #0000BB">$cpads</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">]);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">methods</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">]-&gt;</span><span style="color: #0000BB">evaluate</span><span style="color: #007700">(</span><span style="color: #0000BB">$machine</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$pads</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">]&nbsp;&nbsp;= </span><span style="color: #0000BB">$machine</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">get_buffer</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach (</span><span style="color: #0000BB">$pads </span><span style="color: #007700">as </span><span style="color: #0000BB">$p</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$code </span><span style="color: #007700">= </span><span style="color: #0000BB">call_user_func</span><span style="color: #007700">(array(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">otp</span><span style="color: #007700">, </span><span style="color: #DD0000">'use_sheet'</span><span style="color: #007700">), </span><span style="color: #0000BB">$code</span><span style="color: #007700">, </span><span style="color: #0000BB">$p</span><span style="color: #007700">, </span><span style="color: #0000BB">TRUE</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$code</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">calc_strength </span><span style="color: #007700">(</span><span style="color: #0000BB">$base</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$retval </span><span style="color: #007700">= </span><span style="color: #0000BB">$base</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach (</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">methods </span><span style="color: #007700">as </span><span style="color: #0000BB">$method</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$machine </span><span style="color: #007700">= new </span><span style="color: #0000BB">TE_Machine_StrengthCalculator</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$machine</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">set_buffer</span><span style="color: #007700">(</span><span style="color: #0000BB">1</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$method</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">evaluate</span><span style="color: #007700">(</span><span style="color: #0000BB">$machine</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$retval </span><span style="color: #007700">*= </span><span style="color: #0000BB">$machine</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">get_buffer</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$retval</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">explain </span><span style="color: #007700">()<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">wordwrap</span><span style="color: #007700">(</span><span style="color: #DD0000">"This algorithm allows you to \"fork\" the encryption in two different directions. While normally cryptographic algorithms are pipelined with each other, this uses an algorithm described in Bruce Schneier's _Applied Cryptography, Second Edition: Protocols, Algorithms, and Source Code in C_ to apply two or more algorithms to the message simultaneously.\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"Two or more one time pad sheets are applied to the message. The sheets are then encrypted using different cryptographic algorithms, which must be specified in parentheses, and then the encrypted pads and encrypted message are all concatenated together. A small header is prepended to the result to record the lengths of the encrypted keys to aid with decryption.\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"Examples:\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"'multi (twofish), (morse; memfrob); base64'\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"Will apply two one time pad sheets to the message. The first sheet will be encrypted with Twofish; the second sheet will be encrypted by morse code and then memfrob. The two encrypted sheets will be concatenated with the encrypted message. The result will be encoded with Base64.\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"'multi (twofish \"Password1\"), (rijndael512 \"Password2\"), (cast256 \"Password3\");'\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"You really don't want this message to be decrypted. Short of cracking three world-class encryption schemes, the only way this code can be broken is by guessing your three passwords.\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"(This information applies equally to 'multi' and 'multix'.)"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_Multi_Xor </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_Multi_Mod<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Multi-OTP (Xor)'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'multix'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">PARAMS&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">PARAMS_MISC</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">STRENGTH </span><span style="color: #007700">= </span><span style="color: #0000BB">STRENGTH_MEDIUM</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$methods </span><span style="color: #007700">= array();<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$otp </span><span style="color: #007700">= </span><span style="color: #DD0000">'TrivialEncoder_OneTimePad_Xor'</span><span style="color: #007700">;<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_Hex </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Hexadecimal'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'hex'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">LINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'http://en.wikipedia.org/wiki/Hexadecimal'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">ASCII_SAFENESS </span><span style="color: #007700">= </span><span style="color: #0000BB">ASCII_SAFE_ALWAYS</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">STRENGTH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">STRENGTH_TRIVIAL</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$fstr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'%02x'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$dstr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'%x'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$chunksize </span><span style="color: #007700">= </span><span style="color: #0000BB">2</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">__construct </span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">) { </span><span style="color: #FF8000">/* no options */ </span><span style="color: #007700">}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">encode </span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$code </span><span style="color: #007700">= </span><span style="color: #DD0000">''</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$char </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">, </span><span style="color: #0000BB">0</span><span style="color: #007700">, </span><span style="color: #0000BB">1</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$text </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">, </span><span style="color: #0000BB">1</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$code </span><span style="color: #007700">.= </span><span style="color: #0000BB">sprintf</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">fstr</span><span style="color: #007700">, </span><span style="color: #0000BB">ord</span><span style="color: #007700">(</span><span style="color: #0000BB">$char</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$code</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">decode </span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$text </span><span style="color: #007700">= </span><span style="color: #DD0000">''</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$char </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">, </span><span style="color: #0000BB">0</span><span style="color: #007700">, </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">chunksize</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$code </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">, </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">chunksize</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list(</span><span style="color: #0000BB">$dechar</span><span style="color: #007700">) = </span><span style="color: #0000BB">sscanf</span><span style="color: #007700">(</span><span style="color: #0000BB">$char</span><span style="color: #007700">, </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">dstr</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$text </span><span style="color: #007700">.= </span><span style="color: #0000BB">chr</span><span style="color: #007700">(</span><span style="color: #0000BB">$dechar</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$text</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">explain </span><span style="color: #007700">()<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">wordwrap</span><span style="color: #007700">(</span><span style="color: #DD0000">"Converts input from ASCII (base 256) to hexadecimal (base 16). Doubles message length. This is not a strong encoding, but can be used to force the message to be ASCII-safe, as all output will be alphanumeric."</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_Decimal </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_Hex<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Decimal'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'dec'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">LINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'http://en.wikipedia.org/wiki/Decimal'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">STRENGTH </span><span style="color: #007700">= </span><span style="color: #0000BB">STRENGTH_TRIVIAL</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$fstr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'%03d'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$dstr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'%d'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$chunksize </span><span style="color: #007700">= </span><span style="color: #0000BB">3</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">explain </span><span style="color: #007700">()<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">wordwrap</span><span style="color: #007700">(</span><span style="color: #DD0000">"Converts input from ASCII (base 256) to decimal (base 10). Triples message length. This is not a strong encoding, but can be used to force the message to be ASCII-safe, as all output will be numeric."</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_Octal </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_Hex<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Octal'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'oct'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">LINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'http://en.wikipedia.org/wiki/Octal'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">STRENGTH </span><span style="color: #007700">= </span><span style="color: #0000BB">STRENGTH_TRIVIAL</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$fstr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'%03o'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$dstr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'%o'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$chunksize </span><span style="color: #007700">= </span><span style="color: #0000BB">3</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">explain </span><span style="color: #007700">()<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">wordwrap</span><span style="color: #007700">(</span><span style="color: #DD0000">"Converts input from ASCII (base 256) to octal (base 8). Triples message length. This is not a strong encoding, but can be used to force the message to be ASCII-safe, as all output will be numeric."</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_Binary </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_Hex<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Binary'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'bin'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">LINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'http://en.wikipedia.org/wiki/Binary_numeral_system'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">STRENGTH </span><span style="color: #007700">= </span><span style="color: #0000BB">STRENGTH_TRIVIAL</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$fstr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'%08b'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$dstr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'%b'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$chunksize </span><span style="color: #007700">= </span><span style="color: #0000BB">8</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">/* sscanf($text, '%b') doesn't seem to work */<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">public function </span><span style="color: #0000BB">decode </span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$text </span><span style="color: #007700">= </span><span style="color: #DD0000">''</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$char&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">, </span><span style="color: #0000BB">0</span><span style="color: #007700">, </span><span style="color: #0000BB">8</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$code&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">, </span><span style="color: #0000BB">8</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$dechar </span><span style="color: #007700">= </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">strbin2n</span><span style="color: #007700">(</span><span style="color: #0000BB">$char</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$text </span><span style="color: #007700">.= </span><span style="color: #0000BB">chr</span><span style="color: #007700">(</span><span style="color: #0000BB">$dechar</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$text</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;private function </span><span style="color: #0000BB">strbin2n </span><span style="color: #007700">(</span><span style="color: #0000BB">$bin</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$last </span><span style="color: #007700">= </span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$bin</span><span style="color: #007700">)-</span><span style="color: #0000BB">1</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$x </span><span style="color: #007700">= </span><span style="color: #0000BB">0</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(</span><span style="color: #0000BB">$i</span><span style="color: #007700">=</span><span style="color: #0000BB">0</span><span style="color: #007700">; </span><span style="color: #0000BB">$i</span><span style="color: #007700">&lt;=</span><span style="color: #0000BB">$last</span><span style="color: #007700">; </span><span style="color: #0000BB">$i</span><span style="color: #007700">++)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$x </span><span style="color: #007700">+= (</span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$bin</span><span style="color: #007700">, </span><span style="color: #0000BB">$last</span><span style="color: #007700">-</span><span style="color: #0000BB">$i</span><span style="color: #007700">, </span><span style="color: #0000BB">1</span><span style="color: #007700">) * </span><span style="color: #0000BB">pow</span><span style="color: #007700">(</span><span style="color: #0000BB">2</span><span style="color: #007700">,</span><span style="color: #0000BB">$i</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$x</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">explain </span><span style="color: #007700">()<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">wordwrap</span><span style="color: #007700">(</span><span style="color: #DD0000">"Converts input from ASCII (base 256) to binary (base 2). Increases message length eight-fold. This is not a strong encoding, but can be used to force the message to be ASCII-safe, as all output will be numeric."</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_UU </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'UUEncoding'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'uue'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">LINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'http://en.wikipedia.org/wiki/Uuencoding'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">ASCII_SAFENESS </span><span style="color: #007700">= </span><span style="color: #0000BB">ASCII_SAFE_ALWAYS</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">STRENGTH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">STRENGTH_TRIVIAL</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">__construct </span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">) { </span><span style="color: #FF8000">/* no options */ </span><span style="color: #007700">}<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">encode </span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">) { return </span><span style="color: #0000BB">convert_uuencode</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">); }<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">decode </span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">) { return </span><span style="color: #0000BB">convert_uudecode</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">); }<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_Base64 </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Base 64'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'base64'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">LINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'http://en.wikipedia.org/wiki/Base64'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">ASCII_SAFENESS </span><span style="color: #007700">= </span><span style="color: #0000BB">ASCII_SAFE_ALWAYS</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">STRENGTH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">STRENGTH_TRIVIAL</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">__construct </span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">) { </span><span style="color: #FF8000">/* no options */ </span><span style="color: #007700">}<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">encode </span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">) { return </span><span style="color: #0000BB">base64_encode</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">); }<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">decode </span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">) { return </span><span style="color: #0000BB">base64_decode</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">); }<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_URL </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'URL Encoding'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'url'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">LINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'http://www.ietf.org/rfc/rfc1738.txt'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">ASCII_SAFENESS </span><span style="color: #007700">= </span><span style="color: #0000BB">ASCII_SAFE_ALWAYS</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">STRENGTH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">STRENGTH_TRIVIAL</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">__construct </span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">) { </span><span style="color: #FF8000">/* no options */ </span><span style="color: #007700">}<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">encode </span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">) { return </span><span style="color: #0000BB">urlencode</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">); }<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">decode </span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">) { return </span><span style="color: #0000BB">urldecode</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">); }<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_HTMLEnt </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'HTML Entities'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'html'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">LINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'http://www.w3.org/TR/REC-html40/sgml/entities.html'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">ASCII_SAFENESS </span><span style="color: #007700">= </span><span style="color: #0000BB">ASCII_SAFE_ALWAYS</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">STRENGTH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">STRENGTH_TRIVIAL</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">__construct </span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">) { </span><span style="color: #FF8000">/* no options */ </span><span style="color: #007700">}<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">encode </span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">) { return </span><span style="color: #0000BB">htmlspecialchars</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">); }<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">decode </span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">) { return </span><span style="color: #0000BB">htmlspecialchars_decode</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">); }<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_Morse </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Morse Code'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'morse'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">LINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'http://en.wikipedia.org/wiki/Morse_code'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">ASCII_SAFENESS </span><span style="color: #007700">= </span><span style="color: #0000BB">ASCII_SAFE_PASSTHRU</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">STRENGTH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">STRENGTH_TRIVIAL</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$CAPS_LOCK_STRING </span><span style="color: #007700">= </span><span style="color: #DD0000">'CAPSLOCK'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$EXPLODE_STRING&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'/'</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$morse </span><span style="color: #007700">= array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'A' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'._'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'B' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'_...'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'C' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'_._.'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'D' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'_..'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'E' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'.'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'F' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'.._.'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'G' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'__.'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'H' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'....'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'I' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'..'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'J' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'.___'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'K' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'_._'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'L' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'._..'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'M' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'__'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'N' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'_.'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'O' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'___'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'P' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'.__.'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'Q' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'__._'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'R' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'._.'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'S' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'...'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'T' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'_'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'U' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'.._'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'V' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'..._'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'W' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'.__'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'X' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'_.._'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'Y' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'_.__'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'Z' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'__..'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'0' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'_____'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'1' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'.____'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'2' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'..___'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'3' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'...__'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'4' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'...._'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'5' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'.....'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'6' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'_....'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'7' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'__...'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'8' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'___..'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'9' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'____.'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'.' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'._._._'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">',' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'__..__'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">':' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'___...'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">';' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'_._._.'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'?' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'..__..'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"'" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'.____.'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'!' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'_._.__'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'+' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'._._.'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'-' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'_...._'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'_' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'..__._'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'/' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'_.._.'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'(' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'_.__.'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">')' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'_.__._'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'$' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'..._.._'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'"' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'._.._.'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'@' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'.__._.'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'&amp;' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'._...'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'=' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'_..._'<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;private </span><span style="color: #0000BB">$unmorse</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;private </span><span style="color: #0000BB">$caps_lock </span><span style="color: #007700">= </span><span style="color: #0000BB">FALSE</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">__construct </span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">unmorse </span><span style="color: #007700">= </span><span style="color: #0000BB">array_flip</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">morse</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">encode </span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">caps_lock </span><span style="color: #007700">= </span><span style="color: #0000BB">FALSE</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$retval </span><span style="color: #007700">= array();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$char </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">, </span><span style="color: #0000BB">0</span><span style="color: #007700">, </span><span style="color: #0000BB">1</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$text </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">, </span><span style="color: #0000BB">1</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</span><span style="color: #0000BB">preg_match</span><span style="color: #007700">(</span><span style="color: #DD0000">'/[A-Z]/'</span><span style="color: #007700">, </span><span style="color: #0000BB">$char</span><span style="color: #007700">) &amp;&amp; !</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">caps_lock</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$retval</span><span style="color: #007700">[] = </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">CAPS_LOCK_STRING</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">caps_lock </span><span style="color: #007700">= </span><span style="color: #0000BB">TRUE</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elseif (</span><span style="color: #0000BB">preg_match</span><span style="color: #007700">(</span><span style="color: #DD0000">'/[a-z]/'</span><span style="color: #007700">, </span><span style="color: #0000BB">$char</span><span style="color: #007700">) &amp;&amp; </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">caps_lock</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$retval</span><span style="color: #007700">[] = </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">CAPS_LOCK_STRING</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">caps_lock </span><span style="color: #007700">= </span><span style="color: #0000BB">FALSE</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</span><span style="color: #0000BB">preg_match</span><span style="color: #007700">(</span><span style="color: #DD0000">'/[a-z]/'</span><span style="color: #007700">, </span><span style="color: #0000BB">$char</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$char </span><span style="color: #007700">= </span><span style="color: #0000BB">strtoupper</span><span style="color: #007700">(</span><span style="color: #0000BB">$char</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">morse</span><span style="color: #007700">[</span><span style="color: #0000BB">$char</span><span style="color: #007700">]))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$retval</span><span style="color: #007700">[] = </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">morse</span><span style="color: #007700">[</span><span style="color: #0000BB">$char</span><span style="color: #007700">];<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elseif (</span><span style="color: #0000BB">$char</span><span style="color: #007700">==</span><span style="color: #DD0000">' '</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$retval</span><span style="color: #007700">[] = </span><span style="color: #DD0000">''</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$retval</span><span style="color: #007700">[] = </span><span style="color: #0000BB">$char</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">implode</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">EXPLODE_STRING</span><span style="color: #007700">, </span><span style="color: #0000BB">$retval</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">decode </span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">caps_lock </span><span style="color: #007700">= </span><span style="color: #0000BB">FALSE</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$retval </span><span style="color: #007700">= </span><span style="color: #DD0000">''</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach(</span><span style="color: #0000BB">explode</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">EXPLODE_STRING</span><span style="color: #007700">, </span><span style="color: #0000BB">$code</span><span style="color: #007700">) as </span><span style="color: #0000BB">$char</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</span><span style="color: #0000BB">$char</span><span style="color: #007700">==</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">CAPS_LOCK_STRING</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">caps_lock </span><span style="color: #007700">= !</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">caps_lock</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$char</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$retval </span><span style="color: #007700">.= </span><span style="color: #DD0000">' '</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elseif (isset(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">unmorse</span><span style="color: #007700">[</span><span style="color: #0000BB">$char</span><span style="color: #007700">]))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$retval </span><span style="color: #007700">.= </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">caps_lock</span><span style="color: #007700">?<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">strtoupper</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">unmorse</span><span style="color: #007700">[</span><span style="color: #0000BB">$char</span><span style="color: #007700">]):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">strtolower</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">unmorse</span><span style="color: #007700">[</span><span style="color: #0000BB">$char</span><span style="color: #007700">]);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$retval </span><span style="color: #007700">.= </span><span style="color: #0000BB">$char</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$retval</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">explain </span><span style="color: #007700">()<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">wordwrap</span><span style="color: #007700">(</span><span style="color: #DD0000">"Morse code is the encoding scheme used by telegraph operators for years. It's not meant to obscure the message too much, but like the phonetic encoding can add a touch of flair to your encoded message if used as the final step in a chain.\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"Examples:\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"'otp; vig \"alphabettispaghetti\"; base64; morse;'\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"This should provide a very good encrytion via the combination of a one time pad and Vigenere encoding, make the result ASCII-safe, and print out the result in morse code."<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_Phonetic </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_Morse<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Phonetic Alphabet'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'phonetic'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">LINK&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'http://en.wikipedia.org/wiki/NATO_phonetic_alphabet'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">PARAMS </span><span style="color: #007700">= </span><span style="color: #0000BB">PARAMS_UCASE</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$CAPS_LOCK_STRING </span><span style="color: #007700">= </span><span style="color: #DD0000">'CAPSLOCK'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$EXPLODE_STRING&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">' '</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$case </span><span style="color: #007700">= </span><span style="color: #DD0000">''</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$morse </span><span style="color: #007700">= array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'A' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'ALPHA'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'B' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'BRAVO'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'C' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'CHARLIE'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'D' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'DELTA'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'E' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'ECHO'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'F' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'FOXTROT'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'G' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'GOLF'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'H' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'HOTEL'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'I' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'INDIGO'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'J' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'JULIET'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'K' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'KILO'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'L' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'LIMA'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'M' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'MIKE'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'N' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'NOVEMBER'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'O' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'OSCAR'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'P' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'PAPA'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'Q' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'QUEBEC'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'R' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'ROMEO'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'S' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'SIERRA'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'T' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'TANGO'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'U' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'UNIFORM'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'V' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'VICTOR'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'W' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'WHISKEY'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'X' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'X-RAY'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'Y' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'YANKEE'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'Z' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'ZEBRA'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'0' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'NAUGHT'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'1' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'ONE'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'2' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'TWO'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'3' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'THREE'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'4' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'FOUR'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'5' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'FIVE'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'6' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'SIX'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'7' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'SEVEN'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'8' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'EIGHT'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'9' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'NINER'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'.' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'STOP'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">',' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'COMMA'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'?' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'QUESTION'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'!' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'BANG'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'#' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'HASH'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">':' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'COLON'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">';' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'SEMICOLON'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'@' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'AT'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'&amp;' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'AMPERSAND'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'%' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'PERCENT'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'$' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'DOLLAR'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'£' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'POUND'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'^' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'CARET'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'*' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'ASTERISK'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'(' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'OPEN-PARENTHESIS'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">')' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'CLOSE-PARENTHESIS'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'[' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'OPEN-BRACKET'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">']' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'CLOSE-BRACKET'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'{' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'OPEN-BRACE'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'}' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'CLOSE-BRACE'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'~' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'TILDE'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'|' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'PIPE'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"'" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'SINGLE-QUOTE'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'"' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'DOUBLE-QUOTE'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'`' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'BACKTICK'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'-' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'DASH'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'+' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'PLUS'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'=' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'EQUALS'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'_' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'UNDERSCORE'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'/' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'SLASH'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"\\"</span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'BACKSLASH'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'&lt;' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'LESS-THAN'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'&gt;' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'MORE-THAN'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'NEW-LINE'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"\t"</span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'TAB'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">' ' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'SPACE'<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">__construct </span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</span><span style="color: #0000BB">$options</span><span style="color: #007700">[</span><span style="color: #0000BB">0</span><span style="color: #007700">]))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">case </span><span style="color: #007700">= </span><span style="color: #0000BB">strtoupper</span><span style="color: #007700">(</span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">[</span><span style="color: #0000BB">0</span><span style="color: #007700">], </span><span style="color: #0000BB">0</span><span style="color: #007700">, </span><span style="color: #0000BB">1</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">parent</span><span style="color: #007700">::</span><span style="color: #0000BB">__construct</span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">encode </span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$x </span><span style="color: #007700">= </span><span style="color: #0000BB">parent</span><span style="color: #007700">::</span><span style="color: #0000BB">encode</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">case</span><span style="color: #007700">==</span><span style="color: #DD0000">'L'</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">strtolower</span><span style="color: #007700">(</span><span style="color: #0000BB">$x</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elseif (</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">case</span><span style="color: #007700">==</span><span style="color: #DD0000">'M'</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">ucwords</span><span style="color: #007700">(</span><span style="color: #0000BB">strtolower</span><span style="color: #007700">(</span><span style="color: #0000BB">$x</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">strtoupper</span><span style="color: #007700">(</span><span style="color: #0000BB">$x</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">decode </span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">parent</span><span style="color: #007700">::</span><span style="color: #0000BB">decode</span><span style="color: #007700">(</span><span style="color: #0000BB">strtoupper</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">explain </span><span style="color: #007700">()<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">wordwrap</span><span style="color: #007700">(</span><span style="color: #DD0000">"This is the alpha-bravo-charlie alphabet used by radio operators to spell things out over the airwaves and differentiate between similarly sounding letters like B and P. It's trivial as an encrytion scheme, but adds a bit of flair as a final step, or as an early step can make the message look a lot longer than it really is.\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"This can take one parameter to indicate the case of the output. \"L\" for lower case, \"M\" for mixed case and \"U\" for upper case.\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"Examples:\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"'otp; vig \"alphabettispaghetti\"; base64; phonetic \"M\"'\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"This should provide a very good encrytion via the combination of a one time pad and Vigenere encoding, make the result ASCII-safe, and print out the result in a cute radio-friendly alphabet."<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br /></span><span style="color: #FF8000">/*<br /> * Based on http://fijiwebdesign.com/content/view/101/77/<br /> */<br /></span><span style="color: #007700">class </span><span style="color: #0000BB">TrivialEncoder_Vigenere </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Vigenere Cypher'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'vig'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">LINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'http://en.wikipedia.org/wiki/Vigenere_cipher'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">ASCII_SAFENESS </span><span style="color: #007700">= </span><span style="color: #0000BB">ASCII_SAFE_PASSTHRU</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">STRENGTH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">STRENGTH_MEDIUM</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public </span><span style="color: #0000BB">$table </span><span style="color: #007700">= </span><span style="color: #DD0000">'abcdefghijklmnopqrstuvwxyz'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;public </span><span style="color: #0000BB">$key&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'kryptos'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;public </span><span style="color: #0000BB">$mod&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">26</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">__construct </span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</span><span style="color: #0000BB">$options</span><span style="color: #007700">[</span><span style="color: #0000BB">0</span><span style="color: #007700">]))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">key </span><span style="color: #007700">= </span><span style="color: #0000BB">preg_replace</span><span style="color: #007700">(</span><span style="color: #DD0000">'/[^a-z]/'</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #0000BB">strtolower</span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">[</span><span style="color: #0000BB">0</span><span style="color: #007700">]));<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;private function </span><span style="color: #0000BB">getKey</span><span style="color: #007700">()<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">key</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">encode</span><span style="color: #007700">(</span><span style="color: #0000BB">$str</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$enc_str </span><span style="color: #007700">= </span><span style="color: #DD0000">''</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$len </span><span style="color: #007700">= </span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$str</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(</span><span style="color: #0000BB">$i </span><span style="color: #007700">= </span><span style="color: #0000BB">0</span><span style="color: #007700">; </span><span style="color: #0000BB">$i </span><span style="color: #007700">&lt; </span><span style="color: #0000BB">$len</span><span style="color: #007700">; </span><span style="color: #0000BB">$i</span><span style="color: #007700">++)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</span><span style="color: #0000BB">preg_match</span><span style="color: #007700">(</span><span style="color: #DD0000">'/[a-z]/'</span><span style="color: #007700">, </span><span style="color: #0000BB">$str</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">]))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$shift </span><span style="color: #007700">= </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">P</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">charAt</span><span style="color: #007700">(</span><span style="color: #0000BB">$str</span><span style="color: #007700">, </span><span style="color: #0000BB">$i</span><span style="color: #007700">)) + </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">P</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">charAt</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">key</span><span style="color: #007700">, </span><span style="color: #0000BB">$i</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$pos </span><span style="color: #007700">= </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">modulo</span><span style="color: #007700">(</span><span style="color: #0000BB">$shift</span><span style="color: #007700">, </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">mod</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$enc_str </span><span style="color: #007700">.= </span><span style="color: #0000BB">strtolower</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">A</span><span style="color: #007700">(</span><span style="color: #0000BB">$pos</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elseif (</span><span style="color: #0000BB">preg_match</span><span style="color: #007700">(</span><span style="color: #DD0000">'/[A-Z]/'</span><span style="color: #007700">, </span><span style="color: #0000BB">$str</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">]))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$shift </span><span style="color: #007700">= </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">P</span><span style="color: #007700">(</span><span style="color: #0000BB">strtolower</span><span style="color: #007700">(</span><span style="color: #0000BB">$str</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">])) + </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">P</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">charAt</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">key</span><span style="color: #007700">, </span><span style="color: #0000BB">$i</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$pos </span><span style="color: #007700">= </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">modulo</span><span style="color: #007700">(</span><span style="color: #0000BB">$shift</span><span style="color: #007700">, </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">mod</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$enc_str </span><span style="color: #007700">.= </span><span style="color: #0000BB">strtoupper</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">A</span><span style="color: #007700">(</span><span style="color: #0000BB">$pos</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$enc_str </span><span style="color: #007700">.= </span><span style="color: #0000BB">$str</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">];<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$enc_str</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">decode </span><span style="color: #007700">(</span><span style="color: #0000BB">$str</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$txt_str </span><span style="color: #007700">= </span><span style="color: #DD0000">''</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$len </span><span style="color: #007700">= </span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$str</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(</span><span style="color: #0000BB">$i </span><span style="color: #007700">= </span><span style="color: #0000BB">0</span><span style="color: #007700">; </span><span style="color: #0000BB">$i </span><span style="color: #007700">&lt; </span><span style="color: #0000BB">$len</span><span style="color: #007700">; </span><span style="color: #0000BB">$i</span><span style="color: #007700">++)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</span><span style="color: #0000BB">preg_match</span><span style="color: #007700">(</span><span style="color: #DD0000">'/[a-z]/'</span><span style="color: #007700">, </span><span style="color: #0000BB">$str</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">]))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$shift </span><span style="color: #007700">= </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">P</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">charAt</span><span style="color: #007700">(</span><span style="color: #0000BB">$str</span><span style="color: #007700">, </span><span style="color: #0000BB">$i</span><span style="color: #007700">)) - </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">P</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">charAt</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">key</span><span style="color: #007700">, </span><span style="color: #0000BB">$i</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$pos </span><span style="color: #007700">= </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">modulo</span><span style="color: #007700">(</span><span style="color: #0000BB">$shift</span><span style="color: #007700">, </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">mod</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$txt_str </span><span style="color: #007700">.= </span><span style="color: #0000BB">strtolower</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">A</span><span style="color: #007700">(</span><span style="color: #0000BB">$pos</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elseif (</span><span style="color: #0000BB">preg_match</span><span style="color: #007700">(</span><span style="color: #DD0000">'/[A-Z]/'</span><span style="color: #007700">, </span><span style="color: #0000BB">$str</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">]))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$shift </span><span style="color: #007700">= </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">P</span><span style="color: #007700">(</span><span style="color: #0000BB">strtolower</span><span style="color: #007700">(</span><span style="color: #0000BB">$str</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">])) - </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">P</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">charAt</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">key</span><span style="color: #007700">, </span><span style="color: #0000BB">$i</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$pos </span><span style="color: #007700">= </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">modulo</span><span style="color: #007700">(</span><span style="color: #0000BB">$shift</span><span style="color: #007700">, </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">mod</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$txt_str </span><span style="color: #007700">.= </span><span style="color: #0000BB">strtoupper</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">A</span><span style="color: #007700">(</span><span style="color: #0000BB">$pos</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$txt_str </span><span style="color: #007700">.= </span><span style="color: #0000BB">$str</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">];<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$txt_str</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;private function </span><span style="color: #0000BB">P</span><span style="color: #007700">(</span><span style="color: #0000BB">$a</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">strpos</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">table</span><span style="color: #007700">, </span><span style="color: #0000BB">$a</span><span style="color: #007700">); <br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;private function </span><span style="color: #0000BB">A</span><span style="color: #007700">(</span><span style="color: #0000BB">$p</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$p </span><span style="color: #007700">= </span><span style="color: #0000BB">$p </span><span style="color: #007700">&gt;= </span><span style="color: #0000BB">0 </span><span style="color: #007700">? </span><span style="color: #0000BB">$p </span><span style="color: #007700">: </span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">table</span><span style="color: #007700">) + </span><span style="color: #0000BB">$p</span><span style="color: #007700">; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">table</span><span style="color: #007700">{</span><span style="color: #0000BB">$p</span><span style="color: #007700">};<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;private function </span><span style="color: #0000BB">charAt</span><span style="color: #007700">(</span><span style="color: #0000BB">$str</span><span style="color: #007700">, </span><span style="color: #0000BB">$i</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$i </span><span style="color: #007700">= </span><span style="color: #0000BB">$i </span><span style="color: #007700">% </span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$str</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$str</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">];<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;private function </span><span style="color: #0000BB">modulo</span><span style="color: #007700">(</span><span style="color: #0000BB">$n</span><span style="color: #007700">, </span><span style="color: #0000BB">$mod</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$n </span><span style="color: #007700">% </span><span style="color: #0000BB">$mod</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">explain </span><span style="color: #007700">()<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">wordwrap</span><span style="color: #007700">(</span><span style="color: #DD0000">"The Vigenere cypher, first described by Giovan Batista Belaso in 1553, is a simple but effective variation on Caesar/alphabetic rotation cyphers. It essentially uses a number of different rotation cyphers, cycling though them for each letter of the message.\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"It was considered virtually unbreakable until Friedrich Kasiski published an attack in 1863. Charles Babbage had previously broken the cypher in 1854, but hadn't published his technique. Cryptanalysis is based on letter frequency analysis and looking for patterns common in whichever language was encrypted, so it is possible to improve the strength of the cypher by performing an operation to obscure that first: for example by base64 encoding.\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"The Vignere cypher requires a password to operate on. This should consist of only alphabetic characters, and is treated case-insensitively. The default password is 'kryptos', but you should choose something else.\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"Examples:\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"'base64; vig'\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"Applies Base64 and Vigenere to the message, using the default password \"kryptos\". This should stand up fairly well to cryptanalysis, but only if the password isn't guessed.\n\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"'otp; vig \"alphabettispaghetti\"; base64'\n"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">"This will be a lot more effective. The password is hard to guess; and the one time pad makes the input data seem pseudo-random, helping the output stand up against frequency and pattern analysis. The Base64 encoding makes the output ASCII-safe."<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />abstract class </span><span style="color: #0000BB">TrivialEncoder_MCrypt </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Abstract MCrypt Encoding'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'!m'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">LINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'http://mcrypt.sourceforge.net/'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">REQUIRE_MCRYPT </span><span style="color: #007700">= </span><span style="color: #0000BB">TRUE</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">PARAMS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">PARAMS_KEYWORD</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">STRENGTH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">STRENGTH_STRONG</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$key&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'kryptos'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$algo&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #0000BB">NULL</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">__construct </span><span style="color: #007700">(</span><span style="color: #0000BB">$options</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</span><span style="color: #0000BB">$options</span><span style="color: #007700">[</span><span style="color: #0000BB">0</span><span style="color: #007700">]))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">key </span><span style="color: #007700">= </span><span style="color: #0000BB">trim</span><span style="color: #007700">(</span><span style="color: #DD0000">"{$options[0]}"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">encode </span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$text </span><span style="color: #007700">= </span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">).</span><span style="color: #DD0000">':'</span><span style="color: #007700">.</span><span style="color: #0000BB">$text</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$td </span><span style="color: #007700">= </span><span style="color: #0000BB">mcrypt_module_open</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">algo</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #0000BB">MCRYPT_MODE_CBC</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$iv </span><span style="color: #007700">= </span><span style="color: #0000BB">mcrypt_create_iv</span><span style="color: #007700">(</span><span style="color: #0000BB">mcrypt_enc_get_iv_size</span><span style="color: #007700">(</span><span style="color: #0000BB">$td</span><span style="color: #007700">), </span><span style="color: #0000BB">MCRYPT_RAND</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">mcrypt_generic_init</span><span style="color: #007700">(</span><span style="color: #0000BB">$td</span><span style="color: #007700">, </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">key</span><span style="color: #007700">, </span><span style="color: #0000BB">$iv</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$encrypted_data </span><span style="color: #007700">= </span><span style="color: #0000BB">mcrypt_generic</span><span style="color: #007700">(</span><span style="color: #0000BB">$td</span><span style="color: #007700">, </span><span style="color: #0000BB">$text</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">mcrypt_generic_deinit</span><span style="color: #007700">(</span><span style="color: #0000BB">$td</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">mcrypt_module_close</span><span style="color: #007700">(</span><span style="color: #0000BB">$td</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$iv</span><span style="color: #007700">.</span><span style="color: #0000BB">$encrypted_data</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">decode </span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$td </span><span style="color: #007700">= </span><span style="color: #0000BB">mcrypt_module_open</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">algo</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #0000BB">MCRYPT_MODE_CBC</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$ivsize </span><span style="color: #007700">= </span><span style="color: #0000BB">mcrypt_enc_get_iv_size</span><span style="color: #007700">(</span><span style="color: #0000BB">$td</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$iv </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">, </span><span style="color: #0000BB">0</span><span style="color: #007700">, </span><span style="color: #0000BB">$ivsize</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$encrypted_data </span><span style="color: #007700">= </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$code</span><span style="color: #007700">, </span><span style="color: #0000BB">$ivsize</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">mcrypt_generic_init</span><span style="color: #007700">(</span><span style="color: #0000BB">$td</span><span style="color: #007700">, </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">key</span><span style="color: #007700">, </span><span style="color: #0000BB">$iv</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$text </span><span style="color: #007700">= </span><span style="color: #0000BB">mdecrypt_generic</span><span style="color: #007700">(</span><span style="color: #0000BB">$td</span><span style="color: #007700">, </span><span style="color: #0000BB">$encrypted_data</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">mcrypt_generic_deinit</span><span style="color: #007700">(</span><span style="color: #0000BB">$td</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">mcrypt_module_close</span><span style="color: #007700">(</span><span style="color: #0000BB">$td</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$pos </span><span style="color: #007700">= </span><span style="color: #0000BB">strpos</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">, </span><span style="color: #DD0000">':'</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$n&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= (int)</span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">, </span><span style="color: #0000BB">0</span><span style="color: #007700">, </span><span style="color: #0000BB">$pos</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$text</span><span style="color: #007700">, </span><span style="color: #0000BB">$pos</span><span style="color: #007700">+</span><span style="color: #0000BB">1</span><span style="color: #007700">, </span><span style="color: #0000BB">$n</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">explain </span><span style="color: #007700">()<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">wordwrap</span><span style="color: #007700">(</span><span style="color: #DD0000">"The MCrypt library provides a large variety of different, fairly strong encryption algorithms. We use the ECB encryption mode. Each cypher takes a password as a parameter."</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;public function </span><span style="color: #0000BB">calc_strength </span><span style="color: #007700">(</span><span style="color: #0000BB">$base</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">key</span><span style="color: #007700">==</span><span style="color: #DD0000">'kryptos'</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$base </span><span style="color: #007700">* </span><span style="color: #0000BB">STRENGTH_TRIVIAL</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elseif (</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">key</span><span style="color: #007700">) &lt; </span><span style="color: #0000BB">6</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$base </span><span style="color: #007700">* </span><span style="color: #0000BB">STRENGTH_WEAK</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elseif (</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">key</span><span style="color: #007700">) &lt; </span><span style="color: #0000BB">8</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$base </span><span style="color: #007700">* </span><span style="color: #0000BB">STRENGTH_MEDIUM</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </span><span style="color: #0000BB">$base </span><span style="color: #007700">* </span><span style="color: #0000BB">STRENGTH_STRONG</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_3DES </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_MCrypt<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Triple DES'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'tripledes'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$algo </span><span style="color: #007700">= </span><span style="color: #0000BB">MCRYPT_3DES</span><span style="color: #007700">;<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_DES </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_MCrypt<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'DES'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'des'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$algo </span><span style="color: #007700">= </span><span style="color: #0000BB">MCRYPT_DES</span><span style="color: #007700">;<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_Blowfish </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_MCrypt<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Blowfish'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'blowfish'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$algo </span><span style="color: #007700">= </span><span style="color: #0000BB">MCRYPT_BLOWFISH</span><span style="color: #007700">;<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_Twofish </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_MCrypt<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Twofish'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'twofish'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$algo </span><span style="color: #007700">= </span><span style="color: #0000BB">MCRYPT_TWOFISH</span><span style="color: #007700">;<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_Rijndael_128 </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_MCrypt<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Rijndael 128'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'rijndael128'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$algo </span><span style="color: #007700">= </span><span style="color: #0000BB">MCRYPT_RIJNDAEL_128</span><span style="color: #007700">;<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_Rijndael_256 </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_MCrypt<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Rijndael 256'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'rijndael256'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$algo </span><span style="color: #007700">= </span><span style="color: #0000BB">MCRYPT_RIJNDAEL_256</span><span style="color: #007700">;<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_Rijndael_512 </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_MCrypt<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Rijndael 512'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'rijndael512'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$algo </span><span style="color: #007700">= </span><span style="color: #0000BB">MCRYPT_RIJNDAEL_512</span><span style="color: #007700">;<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_CAST_128 </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_MCrypt<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'CAST 128'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'cast128'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$algo </span><span style="color: #007700">= </span><span style="color: #0000BB">MCRYPT_CAST_128</span><span style="color: #007700">;<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_CAST_256 </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_MCrypt<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'CAST 256'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'cast256'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$algo </span><span style="color: #007700">= </span><span style="color: #0000BB">MCRYPT_CAST_256</span><span style="color: #007700">;<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_GOST </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_MCrypt<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'GOST'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'gost'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$algo </span><span style="color: #007700">= </span><span style="color: #0000BB">MCRYPT_GOST</span><span style="color: #007700">;<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_Loki97 </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_MCrypt<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Loki 97'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'loki97'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$algo </span><span style="color: #007700">= </span><span style="color: #0000BB">MCRYPT_LOKI97</span><span style="color: #007700">;<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_RC2 </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_MCrypt<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'RC2'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'rc2'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$algo </span><span style="color: #007700">= </span><span style="color: #0000BB">MCRYPT_RC2</span><span style="color: #007700">;<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_SAFER_Sk64 </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_MCrypt<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'SAFER-SK64'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'safer64'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$algo </span><span style="color: #007700">= </span><span style="color: #0000BB">MCRYPT_SAFER64</span><span style="color: #007700">;<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_SAFER_Sk128 </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_MCrypt<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'SAFER-SK128'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'safer128'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$algo </span><span style="color: #007700">= </span><span style="color: #0000BB">MCRYPT_SAFER128</span><span style="color: #007700">;<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_SAFER_Plus </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_MCrypt<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'SAFER+'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'saferplus'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$algo </span><span style="color: #007700">= </span><span style="color: #0000BB">MCRYPT_SAFERPLUS</span><span style="color: #007700">;<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_Serpent </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_MCrypt<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'Serpent'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'serpent'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$algo </span><span style="color: #007700">= </span><span style="color: #0000BB">MCRYPT_SERPENT</span><span style="color: #007700">;<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_3Way </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_MCrypt<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'3-Way'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'threeway'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$algo </span><span style="color: #007700">= </span><span style="color: #0000BB">MCRYPT_THREEWAY</span><span style="color: #007700">;<br />}<br /><br />class </span><span style="color: #0000BB">TrivialEncoder_XTEA </span><span style="color: #007700">extends </span><span style="color: #0000BB">TrivialEncoder_MCrypt<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'eXtended TEA'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;const </span><span style="color: #0000BB">CODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">= </span><span style="color: #DD0000">'xtea'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;protected </span><span style="color: #0000BB">$algo </span><span style="color: #007700">= </span><span style="color: #0000BB">MCRYPT_XTEA</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #FF8000">/* TE_Machine */<br /></span><span style="color: #007700">require_once </span><span style="color: #DD0000">'TE_Machine.class.php'</span><span style="color: #007700">;<br /><br />if (!isset(</span><span style="color: #0000BB">$trivialencoder_auto</span><span style="color: #007700">) || </span><span style="color: #0000BB">$trivialencoder_auto</span><span style="color: #007700">===</span><span style="color: #0000BB">TRUE</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;if (</span><span style="color: #0000BB">php_sapi_name</span><span style="color: #007700">()==</span><span style="color: #DD0000">'cli'</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">TE_Machine</span><span style="color: #007700">::</span><span style="color: #0000BB">ProvideCommandLineInterface</span><span style="color: #007700">(</span><span style="color: #0000BB">$argv</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;elseif (</span><span style="color: #0000BB">$_SERVER</span><span style="color: #007700">[</span><span style="color: #DD0000">'REQUEST_METHOD'</span><span style="color: #007700">]==</span><span style="color: #DD0000">'GET'</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">TE_Machine</span><span style="color: #007700">::</span><span style="color: #0000BB">ProvideHTTPInterface</span><span style="color: #007700">(</span><span style="color: #0000BB">$_GET</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;elseif (</span><span style="color: #0000BB">$_SERVER</span><span style="color: #007700">[</span><span style="color: #DD0000">'REQUEST_METHOD'</span><span style="color: #007700">]==</span><span style="color: #DD0000">'POST'</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">TE_Machine</span><span style="color: #007700">::</span><span style="color: #0000BB">ProvideHTTPInterface</span><span style="color: #007700">(</span><span style="color: #0000BB">$_POST</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #0000BB">?&gt;<br /></span>
</span>
</code>